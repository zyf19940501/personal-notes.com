<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>study notes</title>
    <link>/</link>
    <description>Recent content on study notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 29 May 2021 00:00:00 +0000</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>M1原生R语言</title>
      <link>/2021/05/29/m1%E5%8E%9F%E7%94%9Fr%E8%AF%AD%E8%A8%80/</link>
      <pubDate>Sat, 29 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/2021/05/29/m1%E5%8E%9F%E7%94%9Fr%E8%AF%AD%E8%A8%80/</guid>
      <description>前言 2021年5月19日R更新了,版本号R-4.1.0,现在已经原生支持Apple silicon arm64.也就是m1芯片电脑已经原生支持R语言，不需要通过rosetta转移。
同样，rstudio也更新了桌面预览版支持M1-R,非预览版无法正常启动。
rstudio preview下载地址。
接下来，我们就简单测试下4.1.0下R的速度兼容性，以及是否已经支持很多R包了。
 因为本人是商业数据分析师，所以测试内容仅仅只是简单的数据处理的R包，如tidyverse,data.table,rmarkdown,bookdown,readxl,openxlsx等
 R安装  官网安装  官网下载正常安装即可，或者通过homebrew安装。
R包安装 数据处理包 我常用data.table处理数据,所以第一个安装的R包是data.table，正常安装。接下来安装tidyverse报错，看原因是stringi没办法正确安装，解决办法如下：
 stringi  packageurl &amp;lt;- &amp;quot;https://cran.r-project.org/src/contrib/Archive/stringi/stringi_1.1.7.tar.gz&amp;quot; install.packages(packageurl, repos=NULL, type=&amp;quot;source&amp;quot;) 安装stringi包后，tidyverse即可正常使用。
数据库相关 对于我常用的odbc,DBI都可以正常安装，甚至我成功安装SQL SERVER的驱动，如下所示：
但是无法正常连接数据库，据说微软计划下一个版本的odbc会支持m1. .
至于其他的数据库比如mysql，我想是可以成功，没测试。</description>
    </item>
    
    <item>
      <title>R语言服务器环境配置</title>
      <link>/2021/01/11/r%E8%AF%AD%E8%A8%80%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Mon, 11 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>/2021/01/11/r%E8%AF%AD%E8%A8%80%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</guid>
      <description>前言 本文方便没有服务器基础知识的人快速在服务器上面配置R环境以及使用Rstudio-server，避免踩坑。由于本人对服务器以及linxu完全没基础，如有错误，欢迎指正，代码适用Ubuntu18.04。
之所以需要在服务器上面使用R，是因为rstudio-server与shiny-server 太香了。最开始萌生想法是想体验以上两个服务，后来直接买了最便宜的云服务，准备尝试，但是在我买的时候，我对Linxu命令完全不懂，但是经过各种折腾，从了解怎么连接服务器，知道怎么安装R软件，到安装成功rstudio-server与shiny-server，一切都是那么的困难，踩过无数的坑，让我记忆犹新。其中rstudio-server安装成功后，我因为不知道怎么开放端口，不知道新建用户（默认的root用户不能登录）导致自闭，加上各种网上抄的代码并不清楚什么意思，以为是自己什么环节或者步骤错了，搁置了一段时间。后来，稍微懂了一些linux命令，加上去Rstudio官网查看安装手册，突然有一次我就成功了，所以有了本文。
经过以上折腾，shiny-server安装相对比较顺利，但是部署Shiny也是有些小技巧的，现在将R在服务器上面从安装，到包的安装使用以及rstudio-server与shiny-server的安装使用笔记整理记录如下。
成功安装rstudio-server后，就可以不受限制的各处执行R代码，还可以和同事共享服务器以及代码。
后来知道一些服务器知识以及linux命令，就可以随时随地愉快使用blogdown与bookdown写博客与笔记并部署在自己的服务器。
博客地址：www.zhongyufei.com
公众号：宇飞的世界
 安装R 直接安装 首先，登录服务器。mac用户利用ssh命令登录即可。win用户可下载MobaXterm软件登录服务器。请自行搜索相关资料。
ssh root@192.168.2.237 直接安装Ubuntu源里面的R版本，版本可能会比较老旧，除非是你必须用最新版本的R，否则建议就先用该版本，等以后熟悉Linux命令后再重新安装R或者升级R。截止本文，直接安装能安装R-3.6.3版本。
安装r-base即可安装完整版本，当时当你需要编译R包时还需要安装 r-base-dev，我们两个都安装，直接在命令行中执行即可。
# 更新源 sudo apt update # R安装 sudo apt install r-base r-base-dev # 查看是否安装成功 命令行中运行R,应该是R-3.6.3版本，我已经升级了 R 命令行中运行R后出现如上画面，则R安装成功。
安装最新版本的R 安装最新版本的时候，可以自行搜索，关键词【How to install R 4.0.3 on Ubuntu 20.04】。一般是添加最新R源再正常安装即可，在写本文时R已经更新到4.0时代，可以安装到R-4.0.3版本。
注意：添加源时需选择跟系统匹配的源。
# 添加源 sudo add-apt-repository &#39;deb https://cloud.r-project.org/bin/linux/ubuntu focal-cran40/&#39; # 添加密钥 sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9 # 更新 sudo apt update # 安装 sudo apt install r-base r-base-core r-recommended r-base-dev 以上参考代码，需【翻墙】打开https://rtask.</description>
    </item>
    
    <item>
      <title>R语言-blastula-发送邮件</title>
      <link>/2021/01/07/r%E8%AF%AD%E8%A8%80-blastula-%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/</link>
      <pubDate>Thu, 07 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>/2021/01/07/r%E8%AF%AD%E8%A8%80-blastula-%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/</guid>
      <description>前言 blastula包是新出来的发送邮件包，相比Rmail包，该包不依赖JAVA环境，可移植性更好，有时候同事的电脑上并没有配置安装好java环境，代码在他们的电脑上将会报错，而且java环境配置也有很多坑，Rmail包依赖java8的版本，其他的版本好像也会报错，这样比起来blastula包用起来舒服太多，而且 blastula包可以很容易地发送HTML电子邮件 ，消息可以具有三个内容区域（正文，标题和页脚），通过blastula::blocks()以及blastula::md()函数，我们可以插入Markdown文本，甚至是HTML片段
github地址https://github.com/rstudio/blastula
其他发送邮件包如RDCOMClient，sendmailR，mailR,emayili,gmailR等。
常规邮件发送 第一步生成发送邮件的邮箱凭证，第二步利用compose_email()函数构建邮件内容，第三步smtp_send()发送邮件。通过下面的官方案例解析，我们将会看到多种元素间可以通过c()与md()连接起来，让我们邮件正文拥有无限可能。
生成凭证 生成邮件通行凭证,create_smtp_creds_file()函数会生成一个包含密码的文本文件，可用txt等文本工具打开查看,故有一定风险。
重要邮箱邮件可用create_smtp_creds_key( id = &amp;quot;gmail&amp;quot;, user = &amp;quot;user_name@gmail.com&amp;quot;, provider = &amp;quot;gmail&amp;quot; )方式创建
create_smtp_creds_file(file = &#39;email_creds&#39;, user = &#39;zhongyf@example.com.hk&#39;, host = &#39;mail.example.com.hk&#39;, port = 25,use_ssl = FALSE) file:文件名为email_creds;
user:发送邮件的邮件账户;
host:邮件服务器，像mail.example.com.hk,是目前邮件服务器地址,如果是QQ邮箱，host 地址为 smtp.qq.com，gmail邮箱是smtp.gmai.com不同邮件的host地址不一样
port:邮件服务器端口地址，一般默认是25，QQ的port为465或587
use_ssl：是否加密。询问公司IT人员，一般没有加密。QQ邮箱是加密的，需要另外获取密码，不是你常用的登录邮箱密码。
可搜索关键词[QQ邮箱开启SMTP方法如何授权]1查看详情
构建邮件正文 以下代码是官方案例：
#添加时间 date_time &amp;lt;- add_readable_time() # Create an image string using an on-disk 指定一个图像文件路径 # image file img_file_path &amp;lt;- system.file( &amp;quot;img&amp;quot;, &amp;quot;pexels-photo-267151.jpeg&amp;quot;, package = &amp;quot;blastula&amp;quot; ) #添加图片 转化成html文本 img_string &amp;lt;- add_image(file = img_file_path) # compose_email函数创建邮件消息，可以将字符向量合并到消息正文中 # The compose_email() function allows us to easily create an email message.</description>
    </item>
    
    <item>
      <title>利用VBA自动生成Power Pivot 数据透视表</title>
      <link>/2020/12/30/%E5%88%A9%E7%94%A8vba%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90power-pivot-%E6%95%B0%E6%8D%AE%E9%80%8F%E8%A7%86%E8%A1%A8/</link>
      <pubDate>Wed, 30 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/12/30/%E5%88%A9%E7%94%A8vba%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90power-pivot-%E6%95%B0%E6%8D%AE%E9%80%8F%E8%A7%86%E8%A1%A8/</guid>
      <description>一键生成Power Pivot 数据透视表 前言 什么是自动创建透视表，即利用VBA代码一键生成带度量值的Power Pivot透视表。为什么需要自动创建数据透视表？当你需要制作大量格式相同，数据原不同的透视表时。
最近接到一项工作任务，需要制作大量相同的数据透视表，但是使用表格区域以及层级不一样，数据源权限不一样，导致透视表数据源需要不一样，类似华东、华西、华南、华北四个区区域，四份数据源，但是透视表格式以及其中的度量值完全一致；和Power BI中的管理角色功能类似，即不同的用户有不同的数据权限
最初计划是做好一个模板，然后复制，以便快速完成任务，索性第一次需要复制的份数不多，能按时完成。不久过后，模板需要做调整，才发现更改有大量工作，需要一个个工作簿更改，因此萌发了实现批量制作透视表的想法。
后来经过查阅相关资料，初步发现利用python或R等脚本语言没办法制作透视表，只能从VBA中开始寻找解决方案。但是无奈对VBA没概念，查找一番发现没有现成的解决方案，或者也是因为当时看不懂VBA代码错过了。但是，无意中发现了刷新透视表的VBA代码，这样我们可以通过脚本语言更新数据源并用可以刷新透视表的代码刷新透视表，按照层级拆分后的数据源全部刷新一遍，就得到了不同数据源的透视表，至此，算解决了批量创建格式相同但数据源不同的透视表问题。
准备工作 在查找相关资料中，发现透视表主要分为两大类，【基础透视表】，【Power Pivot 透视表】，本人常用【Power Pivot 透视表】。想要完成一键生成透视表，需要经过以下几个步骤：
  将表格数据源添加都模型
  添加度量值和建立表关系
  创建透视表
  拉取透视表，即将相应维度以及度量值放在透视表的 【行】，【列】，【值】，【筛选】上。
  透视表数据源来源：透视表的数据源可以区分为本地数据源或外部数据源，一般默认本地数据源为Excel等为主的文本文件，外部数据源以数据库为主，本文中的透视表数据源来源于本地Excel。
[直接看怎样创建Power Pivot 透视表](# Power Pivot 透视表)
基础透视表 基础透视表是指不需要从模型生成透视表，也不需要通过DAX函数添加度量值的情况下透视表。
在这种情况下，透视表可以通过录制宏实现VBA代码自动创建透视表。讲道理，看多了这几段代码能勉强认识看懂，但是不是完全理解，大家如果需要用，自己多录制几段宏代码就ok了。
演示数据以及代码下载地址：https://gitee.com/zhongyufei/excel/tree/master/vba
Sub 创建透视表() Sheets.Add ActiveWorkbook.PivotCaches.Create(SourceType:=xlDatabase, SourceData:=&amp;#34;表1&amp;#34; _ , Version:=6).CreatePivotTable TableDestination:=&amp;#34;Sheet1!R3C1&amp;#34;, TableName _ :=&amp;#34;数据透视表1&amp;#34;, DefaultVersion:=6 Sheets(&amp;#34;Sheet1&amp;#34;).Select Cells(3, 1).Select With ActiveSheet.PivotTables(&amp;#34;数据透视表1&amp;#34;).PivotCache .RefreshOnFileOpen = False .MissingItemsLimit = xlMissingItemsDefault End With ’数据透视表行列部分以及计算汇总字段 ActiveSheet.PivotTables(&amp;#34;数据透视表1&amp;#34;).RepeatAllLabels xlRepeatLabels With ActiveSheet.</description>
    </item>
    
    <item>
      <title>pyttsx3 -文字转语音</title>
      <link>/2020/12/14/pyttsx3-%E6%96%87%E5%AD%97%E8%BD%AC%E8%AF%AD%E9%9F%B3/</link>
      <pubDate>Mon, 14 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/12/14/pyttsx3-%E6%96%87%E5%AD%97%E8%BD%AC%E8%AF%AD%E9%9F%B3/</guid>
      <description>说明 有天突发奇想，想把一些书本转化成语音mp3格式，方便听。简单搜素后决定用python的pyttsx3库实现。
代码 中间存在一些版本问题，后来实现miniconda 创建新环境实现。
安装 1.安装 miniconda 进入网址 Miniconda - Conda
下载 Python3 的 64-bit 版本即可。注意，最好是64位的版本（除非你的电脑是32位的）。这里选择3.X或者2.X没关系，都可以，但建议和课程一致选Python3版本。
2.添加 conda 的镜像服务器 因为conda 下载文件要用到国外的服务器，速度一般会比较慢，我们可以通过增加一个清华的镜像服务器来解决。
打开cmd终端或者Anaconda Prompt（快捷键： win+r ：然后输入cmd，回车）。
分别在cmd终端或者Anaconda Prompt里粘贴下面两行代码（每粘贴一行回车确认）。
conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/
conda config --set show_channel_urls yes
# 创建新环境 conda create –n yuyin python=3.9 activate yuyin pip install pyinstaller pyinstaller -F C:\Users\zhongyf\Desktop\文字转语音.py --hidden-import=pyttsx3.drivers.sapi5 pyttsx3代码如下：
import pyttsx3 filename = input(&#39;请输入需转化语音的txt文件名称:&#39;) f = open(filename,&#39;r&#39;,encoding = &#39;utf-8&#39;) line = f.readlines() line = str(line) line = line.</description>
    </item>
    
    <item>
      <title>DT包使用案例</title>
      <link>/2020/12/02/dt%E5%8C%85%E4%BD%BF%E7%94%A8%E6%A1%88%E4%BE%8B/</link>
      <pubDate>Wed, 02 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/12/02/dt%E5%8C%85%E4%BD%BF%E7%94%A8%E6%A1%88%E4%BE%8B/</guid>
      <description>说明 记录DT包使用案例
案例  按钮  dat &amp;lt;- data.frame( &amp;quot;Title&amp;quot; = c( &amp;quot;A Random Walk Down Wall Street&amp;quot;, &amp;quot;Naked Statistics&amp;quot;, &amp;quot;Freakonomics&amp;quot; ), &amp;quot;Author&amp;quot; = c( &amp;quot;Burton G. Malkiel&amp;quot;, &amp;quot;Charles Wheelan&amp;quot;, &amp;quot;Steven D. Levitt and Stephen J. Dubner&amp;quot; ) ) library(DT) datatable(dat) datatable(dat, rownames = FALSE, # remove row numbers filter = &amp;quot;top&amp;quot;, # add filter on top of columns extensions = &amp;quot;Buttons&amp;quot;, # add download buttons options = list( autoWidth = TRUE, dom = &amp;quot;Blfrtip&amp;quot;, # location of the download buttons buttons = c(&amp;quot;copy&amp;quot;, &amp;quot;csv&amp;quot;, &amp;quot;excel&amp;quot;, &amp;quot;pdf&amp;quot;, &amp;quot;print&amp;quot;), # download buttons pageLength = 5, # show first 5 entries, default is 10 order = list(0, &amp;quot;asc&amp;quot;) # order the title column by ascending order ) ) # Add links to the interactive table datatable(dat, rownames = FALSE, # remove row numbers filter = &amp;quot;top&amp;quot;, # add filter on top of columns extensions = &amp;quot;Buttons&amp;quot;, # add download buttons options = list( autoWidth = TRUE, dom = &amp;quot;Blfrtip&amp;quot;, # location of the download buttons buttons = c(&amp;quot;copy&amp;quot;, &amp;quot;csv&amp;quot;, &amp;quot;excel&amp;quot;, &amp;quot;pdf&amp;quot;, &amp;quot;print&amp;quot;), # download buttons pageLength = 5, # show first 5 entries, default is 10 order = list(0, &amp;quot;asc&amp;quot;) # order the title column by ascending order ), escape = FALSE # to make URLs clickable ) 来源：https://www.</description>
    </item>
    
    <item>
      <title>git使用</title>
      <link>/2020/12/01/git%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/12/01/git%E4%BD%BF%E7%94%A8/</guid>
      <description>git使用 需要更进一步学习了解userthis包
library(usethis) ?use_github() edit_r_environ() #creat github use_github(protocol = &#39;https&#39;,auth_token = Sys.getenv(&amp;quot;GITHUB_PAT&amp;quot;)) upstream_url &amp;lt;- &amp;quot;git@github.com:&amp;lt;OWNER&amp;gt;/&amp;lt;REPO&amp;gt;.git&amp;quot; use_git_remote(name = &amp;quot;upstream&amp;quot;, url = upstream_url) 参考地址 https://www.youtube.com/watch?v=kL6L2MNqPHg&amp;amp;t=799s
blogdown 关于github git的使用 https://bookdown.org/yihui/blogdown/github-pages.html</description>
    </item>
    
    <item>
      <title>树莓派官方系统安装R-4.0.3</title>
      <link>/2020/12/01/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%98%E6%96%B9%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85r/</link>
      <pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/12/01/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%98%E6%96%B9%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85r/</guid>
      <description>树莓派安装R  参考资料 http://rolandtanglao.com/2020/10/28/p1-how-to-install-r-403-raspberry-pi4-debian10/
https://stackoverflow.com/questions/57023388/cant-install-r-3-6-in-raspberry-pi-3-b-in-raspbian-stretch
代码 先执行以下操作
wget ftp://ftp.pcre.org/pub/pcre/pcre2-10.35.tar.gz tar -zvxf pcre2-10.35.tar.gz cd pcre2-10.35 ./configure; make make install sudo apt-get install -y gfortran libreadline6-dev libx11-dev libxt-dev \ libpng-dev libjpeg-dev libcairo2-dev xvfb \ libbz2-dev libzstd-dev liblzma-dev \ libcurl4-openssl-dev \ texinfo texlive texlive-fonts-extra \ screen wget openjdk-8-jdk cd /usr/local/src sudo wget https://cran.rstudio.com/src/base/R-4/R-4.0.3.tar.gz sudo su tar zxvf R-4.0.3.tar.gz cd R-4.0.3 ./configure --enable-R-shlib #--with-blas --with-lapack #optional make make install cd .. rm -rf R-4.0.3* exit cd 部分R包依赖环境 sudo apt install build-essential libcurl4-gnutls-dev libxml2-dev libssl-dev Ubuntu系统安装R 树莓派Ubuntu系统安装R相对简单很多，正常更新源就能安装到最新版本。或者简单搜索即可。</description>
    </item>
    
    <item>
      <title>Send email with R</title>
      <link>/2020/08/19/send-email/</link>
      <pubDate>Wed, 19 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/08/19/send-email/</guid>
      <description>参考资料 https://github.com/rstudio/blastula
blastula包可以很容易地发送HTML电子邮件 。该消息可以具有三个内容区域（正文，标题和页脚），并且我们可以插入Markdown文本，基于块的组件,甚至HTML片段。
生成凭证 生成邮件通行凭证,create_smtp_creds_file()函数会生成一个包含密码的文本文件，可用txt等文本工具打开查看,故有一定风险。
重要邮箱邮件可用create_smtp_creds_key( id = &amp;quot;gmail&amp;quot;, user = &amp;quot;user_name@gmail.com&amp;quot;, provider = &amp;quot;gmail&amp;quot; )方式创建
create_smtp_creds_file(file = &#39;email_creds&#39;, user = &#39;zhongyf@ghzy.com.hk&#39;, host = &#39;mail.ghzy.com.hk&#39;, port = 25,use_ssl = FALSE) file:文件名为email_creds;
user:发送邮件的邮件账户;
host:邮件服务器，像mail.ghzy.com.hk,是目前公司的邮件服务器地址,如果是QQ邮箱，host 地址为 smtp.qq.com,不同邮件的host地址不一样
port:邮件服务器端口地址，一般默认是25，QQ的port为465或587
use_ssl：是否加密。询问公司IT人员，一般没有加密。QQ邮箱是加密的，需要另外获取密码，不是你常用的登录邮箱密码。
可搜索关键词[QQ邮箱开启SMTP方法如何授权]1查看详情
发送邮件 以下代码是官方案例：
date_time &amp;lt;- add_readable_time() #添加时间 # Create an image string using an on-disk 指定一个图像文件路径 # image file img_file_path &amp;lt;- system.file( &amp;quot;img&amp;quot;, &amp;quot;pexels-photo-267151.jpeg&amp;quot;, package = &amp;quot;blastula&amp;quot; ) img_string &amp;lt;- add_image(file = img_file_path) #添加图片 转化成html文本 # compose_email函数创建邮件消息，可以将字符向量合并到消息正文中 # The compose_email() function allows us to easily create an email message.</description>
    </item>
    
    <item>
      <title>Shiny部署</title>
      <link>/2020/07/29/deploying-shiny/</link>
      <pubDate>Wed, 29 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/07/29/deploying-shiny/</guid>
      <description>安装 官网资料：https://rstudio.com/products/shiny/download-server/
第一步安装R
sudo yum install R
centos7 上可直接用上面命令安装R,但是在centos 8 安装会无法成功。因为R软件包没有被包含在 CentOS 8 的核心软件源中。我们需要从 EPEL 软件源中安装 R
启用 EPEL 和 PowerTools 软件源
sudo dnf install epel-release sudo dnf config-manager &amp;ndash;set-enabled PowerTools
安装R输入：
sudo yum install R
查看R版本 R &amp;ndash;version
第二步 安装shiny package
sudo su -
-c &amp;ldquo;R -e &amp;quot;install.packages(&amp;lsquo;shiny&amp;rsquo;, repos=&amp;lsquo;https://cran.rstudio.com/&#39;)&amp;quot;&amp;rdquo;
或者近入R后install.package(&#39;shiny&#39;) 安装
第三步 下载安装shiny
wget https://download3.rstudio.org/centos6.3/x86_64/shiny-server-1.5.14.948-x86_64.rpm
sudo yum install &amp;ndash;nogpgcheck shiny-server-1.5.14.948-x86_64.rpm
第四步 测试是否安装成功
http://ip:3838
ip地址如果是本机,可以换成localhost,或者是本机ip地址。如果是公网像云服务器,需要开放3838的端口后再测试。
查看shiny-server 状态
sudo systemctl status shiny-server</description>
    </item>
    
    <item>
      <title>About</title>
      <link>/about/</link>
      <pubDate>Thu, 05 May 2016 21:48:51 -0700</pubDate>
      
      <guid>/about/</guid>
      <description>This is a &amp;ldquo;hello world&amp;rdquo; example website for the blogdown package. The theme was forked from @jrutheiser/hugo-lithium-theme and modified by Yihui Xie.</description>
    </item>
    
  </channel>
</rss>
