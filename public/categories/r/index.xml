<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on study notes</title>
    <link>/categories/r/</link>
    <description>Recent content in R on study notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 03 Jun 2021 00:00:00 +0000</lastBuildDate><atom:link href="/categories/r/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>R 版本更新</title>
      <link>/2021/06/03/r-version-update/</link>
      <pubDate>Thu, 03 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>/2021/06/03/r-version-update/</guid>
      <description>由于个人强迫症，当R新版出来时一定会尝试，所以怎么快捷方便更新R版本是个问题。有时升级到最新版本时想要保留当前版本，如果是自己本地环境可以任意折腾，但是更新服务器上R版本时需谨慎,尤其是部署了rstudio-server以及shiny-server时，即使出现问题不兼容也能退回旧版本。所以就服务器上R安装更新做如下记录。 由于对linux命令不太了解以及对linux上的R认知有限,难免出现错误,如有问题,望告知,谢谢.
基础命令 开始安装更新之前先了解几个命令. 想要查看服务器上是否安装了R,安装了哪些版本,目前使用的版本的路径等等问题,可以用以下命令在终端执行
 R版本  # Red hat centosrpm -qa |grep R-# Ubuntu$ dpkg -s r-base R位置  which R R_RHOME  R_RHOME安装更新 由于之前已经写过Ubuntu系统上R安装更新,本文主要记录Centos上R安装以及更新.另外会简单描述下win系统上R的安装以及更新.
Linux 本文主要代码是Centos7上R语言的安装更新.由于有Rstudio出品的R的安装指引,在服务器上安装R已经是一件超级简单的事情,之所以有本文的笔记,主要是想让自己加深理解. 犹记得当初对linux一窍不通时安装R的迷茫与心累.第一次尝试服务器上安装R就是使用的阿里云的centos7系统安装,按照网上提供的教程yum install R很顺畅的就安装上了.但是当我想安装新版本R时,灾难就来临了.后面经过摸索,我使用R的环境已经从centos系统切换到buntu系统了.主要是感觉网上关于ubuntu和R的教程多一些.另外ubuntu桌面看起来让我对ubuntu有好感.
Centos 系统软件包管理器安装 在centos7上安装R首先需要在系统上安装EPEL存储库。通过系统软件包安装R时which R返回结果是/usr/bin/R
sudo yum install epel-releasesudo yum install RR --version截止到2021年5月7日，在centos7上通过上述代码可安装R3.6.0
源安装Rstudio 采用Rstudio install R 方法安装指定版本R.通过该方式安装R时which R返回结果是通常是/usr/local/bin/R，好处是可以安装使用多版本的R，并在更新系统软件包时避免替换R的现有版本。和win系统下面安装多版本的R类似。
 先决条件  # Enable the Extra Packages for Enterprise Linux (EPEL) repositorysudo yum install https://dl.</description>
    </item>
    
    <item>
      <title>M1原生R语言</title>
      <link>/2021/05/29/m1%E5%8E%9F%E7%94%9Fr%E8%AF%AD%E8%A8%80/</link>
      <pubDate>Sat, 29 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/2021/05/29/m1%E5%8E%9F%E7%94%9Fr%E8%AF%AD%E8%A8%80/</guid>
      <description>前言 2021年5月19日R更新了,版本号R-4.1.0,现在已经原生支持Apple silicon arm64.也就是m1芯片电脑已经原生支持R语言，不需要通过rosetta转移。
同样，rstudio也更新了桌面预览版支持M1-R,非预览版无法正常启动。
rstudio preview下载地址。
接下来，我们就简单测试下4.1.0下R的速度兼容性，以及是否已经支持很多R包了。
 因为本人是商业数据分析师，所以测试内容仅仅只是简单的数据处理的R包，如tidyverse,data.table,rmarkdown,bookdown,readxl,openxlsx等
 R安装  官网安装  官网下载正常安装即可，或者通过homebrew安装。
R包安装 数据处理包 我常用data.table处理数据,所以第一个安装的R包是data.table，正常安装。接下来安装tidyverse报错，看原因是stringi没办法正确安装，解决办法如下：
 stringi  packageurl &amp;lt;- &amp;quot;https://cran.r-project.org/src/contrib/Archive/stringi/stringi_1.1.7.tar.gz&amp;quot;install.packages(packageurl, repos=NULL, type=&amp;quot;source&amp;quot;)安装stringi包后，tidyverse即可正常使用。
数据库相关 对于我常用的odbc,DBI都可以正常安装，甚至我成功安装SQL SERVER的驱动，如下所示：
但是无法正常连接数据库，据说微软计划下一个版本的odbc会支持m1. .
至于其他的数据库比如mysql，我想是可以成功，没测试。</description>
    </item>
    
    <item>
      <title>Send email with R</title>
      <link>/2020/08/19/send-email/</link>
      <pubDate>Wed, 19 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/08/19/send-email/</guid>
      <description>参考资料 https://github.com/rstudio/blastula
blastula包可以很容易地发送HTML电子邮件 。该消息可以具有三个内容区域（正文，标题和页脚），并且我们可以插入Markdown文本，基于块的组件,甚至HTML片段。
生成凭证 生成邮件通行凭证,create_smtp_creds_file()函数会生成一个包含密码的文本文件，可用txt等文本工具打开查看,故有一定风险。
重要邮箱邮件可用create_smtp_creds_key( id = &amp;quot;gmail&amp;quot;, user = &amp;quot;user_name@gmail.com&amp;quot;, provider = &amp;quot;gmail&amp;quot; )方式创建
create_smtp_creds_file(file = &#39;email_creds&#39;,user = &#39;zhongyf@ghzy.com.hk&#39;,host = &#39;mail.ghzy.com.hk&#39;,port = 25,use_ssl = FALSE)file:文件名为email_creds;
user:发送邮件的邮件账户;
host:邮件服务器，像mail.ghzy.com.hk,是目前公司的邮件服务器地址,如果是QQ邮箱，host 地址为 smtp.qq.com,不同邮件的host地址不一样
port:邮件服务器端口地址，一般默认是25，QQ的port为465或587
use_ssl：是否加密。询问公司IT人员，一般没有加密。QQ邮箱是加密的，需要另外获取密码，不是你常用的登录邮箱密码。
可搜索关键词[QQ邮箱开启SMTP方法如何授权]1查看详情
发送邮件 以下代码是官方案例：
date_time &amp;lt;- add_readable_time() #添加时间# Create an image string using an on-disk 指定一个图像文件路径# image fileimg_file_path &amp;lt;-system.file(&amp;quot;img&amp;quot;, &amp;quot;pexels-photo-267151.jpeg&amp;quot;,package = &amp;quot;blastula&amp;quot;)img_string &amp;lt;- add_image(file = img_file_path) #添加图片 转化成html文本# compose_email函数创建邮件消息，可以将字符向量合并到消息正文中# The compose_email() function allows us to easily create an email message.</description>
    </item>
    
  </channel>
</rss>
