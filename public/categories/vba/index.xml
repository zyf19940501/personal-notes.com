<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>VBA on study notes</title>
    <link>/categories/vba/</link>
    <description>Recent content in VBA on study notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 30 Dec 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/vba/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>利用VBA自动生成Power Pivot 数据透视表</title>
      <link>/2020/12/30/%E5%88%A9%E7%94%A8vba%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90power-pivot-%E6%95%B0%E6%8D%AE%E9%80%8F%E8%A7%86%E8%A1%A8/</link>
      <pubDate>Wed, 30 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/12/30/%E5%88%A9%E7%94%A8vba%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90power-pivot-%E6%95%B0%E6%8D%AE%E9%80%8F%E8%A7%86%E8%A1%A8/</guid>
      <description>一键生成Power Pivot 数据透视表 前言 什么是自动创建透视表，即利用VBA代码一键生成带度量值的Power Pivot透视表。为什么需要自动创建数据透视表？当你需要制作大量格式相同，数据原不同的透视表时。
最近接到一项工作任务，需要制作大量相同的数据透视表，但是使用表格区域以及层级不一样，数据源权限不一样，导致透视表数据源需要不一样，类似华东、华西、华南、华北四个区区域，四份数据源，但是透视表格式以及其中的度量值完全一致；和Power BI中的管理角色功能类似，即不同的用户有不同的数据权限
最初计划是做好一个模板，然后复制，以便快速完成任务，索性第一次需要复制的份数不多，能按时完成。不久过后，模板需要做调整，才发现更改有大量工作，需要一个个工作簿更改，因此萌发了实现批量制作透视表的想法。
后来经过查阅相关资料，初步发现利用python或R等脚本语言没办法制作透视表，只能从VBA中开始寻找解决方案。但是无奈对VBA没概念，查找一番发现没有现成的解决方案，或者也是因为当时看不懂VBA代码错过了。但是，无意中发现了刷新透视表的VBA代码，这样我们可以通过脚本语言更新数据源并用可以刷新透视表的代码刷新透视表，按照层级拆分后的数据源全部刷新一遍，就得到了不同数据源的透视表，至此，算解决了批量创建格式相同但数据源不同的透视表问题。
准备工作 在查找相关资料中，发现透视表主要分为两大类，【基础透视表】，【Power Pivot 透视表】，本人常用【Power Pivot 透视表】。想要完成一键生成透视表，需要经过以下几个步骤：
  将表格数据源添加都模型
  添加度量值和建立表关系
  创建透视表
  拉取透视表，即将相应维度以及度量值放在透视表的 【行】，【列】，【值】，【筛选】上。
  透视表数据源来源：透视表的数据源可以区分为本地数据源或外部数据源，一般默认本地数据源为Excel等为主的文本文件，外部数据源以数据库为主，本文中的透视表数据源来源于本地Excel。
[直接看怎样创建Power Pivot 透视表](# Power Pivot 透视表)
基础透视表 基础透视表是指不需要从模型生成透视表，也不需要通过DAX函数添加度量值的情况下透视表。
在这种情况下，透视表可以通过录制宏实现VBA代码自动创建透视表。讲道理，看多了这几段代码能勉强认识看懂，但是不是完全理解，大家如果需要用，自己多录制几段宏代码就ok了。
演示数据以及代码下载地址：https://gitee.com/zhongyufei/excel/tree/master/vba
Sub 创建透视表() Sheets.Add ActiveWorkbook.PivotCaches.Create(SourceType:=xlDatabase, SourceData:=&amp;#34;表1&amp;#34; _ , Version:=6).CreatePivotTable TableDestination:=&amp;#34;Sheet1!R3C1&amp;#34;, TableName _ :=&amp;#34;数据透视表1&amp;#34;, DefaultVersion:=6 Sheets(&amp;#34;Sheet1&amp;#34;).Select Cells(3, 1).Select With ActiveSheet.PivotTables(&amp;#34;数据透视表1&amp;#34;).PivotCache .RefreshOnFileOpen = False .MissingItemsLimit = xlMissingItemsDefault End With ’数据透视表行列部分以及计算汇总字段 ActiveSheet.PivotTables(&amp;#34;数据透视表1&amp;#34;).RepeatAllLabels xlRepeatLabels With ActiveSheet.</description>
    </item>
    
    <item>
      <title>自动创建数据透视表</title>
      <link>/2019/09/03/vba/</link>
      <pubDate>Tue, 03 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/09/03/vba/</guid>
      <description>为什么需要自动创建数据透视表 最近接到一项工作任务，需要制作大量同款数据透视表，但是使用区域以及层级不一样导致数据源不一样，依据一个模板批量复制后更改部分细节问题会有大量工作，需要一个个透视表取更改，因此萌发了VBA实现批量制作透视表的想法。
基础透视表 本处基础透视表是指不需要从模型生成透视表，也不需要通过DAX函数添加度量值的情况下透视表。在这种情况下透视表可以通过录制宏实现VBA代码自动创建透视表。
数据以及代码下载地址：https://gitee.com/zhongyufei/excel/tree/master/vba
Sub 创建透视表()Sheets.AddActiveWorkbook.PivotCaches.Create(SourceType:=xlDatabase, SourceData:=&amp;quot;表1&amp;quot; _, Version:=6).CreatePivotTable TableDestination:=&amp;quot;Sheet1!R3C1&amp;quot;, TableName _:=&amp;quot;数据透视表1&amp;quot;, DefaultVersion:=6Sheets(&amp;quot;Sheet1&amp;quot;).SelectCells(3, 1).SelectWith ActiveSheet.PivotTables(&amp;quot;数据透视表1&amp;quot;).PivotCache.RefreshOnFileOpen = False.MissingItemsLimit = xlMissingItemsDefaultEnd With’数据透视表行列部分以及计算汇总字段ActiveSheet.PivotTables(&amp;quot;数据透视表1&amp;quot;).RepeatAllLabels xlRepeatLabelsWith ActiveSheet.PivotTables(&amp;quot;数据透视表1&amp;quot;).PivotFields(&amp;quot;Species&amp;quot;).Orientation = xlRowField.Position = 1End WithActiveSheet.PivotTables(&amp;quot;数据透视表1&amp;quot;).AddDataField ActiveSheet.PivotTables(&amp;quot;数据透视表1&amp;quot; _).PivotFields(&amp;quot;Petal.Width&amp;quot;), &amp;quot;求和项:Petal.Width&amp;quot;, xlSumEnd SubPower Pivot 透视表 工作中大部分时候都是带度量值的透视表，那就需要通过VBA直接生成度量值，主要步骤：第一步将表格添加到模型，第二步创建度量值，第三步创建透视表，拉取透视表。
数据以及代码下载地址：https://gitee.com/zhongyufei/excel/tree/master/vba/Powerpivot
  将表格添加到模型
第一步将表添加到模型，需要说明的是 ：将Sheet1添加到模型，并命名为ORA，这些参数需根据实际情况修改调整
Sub 添加到模型()Sheets(&amp;quot;Sheet1&amp;quot;).ListObjects(1).Name = &amp;quot;ORA&amp;quot;WrkName = ActiveWorkbook.NameTblName = Sheets(&amp;quot;Sheet1&amp;quot;).</description>
    </item>
    
    <item>
      <title>vba连接数据库查询</title>
      <link>/2019/07/06/vba/</link>
      <pubDate>Sat, 06 Jul 2019 12:30:30 +0000</pubDate>
      
      <guid>/2019/07/06/vba/</guid>
      <description>VBA代码 在Excle中插入宏代码保存，按照自己需求更改相应 sql 语句即可实现相应的功能。
本宏实现获取最新门店库存的功能,sql语句为 SELECT * FROM [spb].[dbo].[BI_inventory_table] where convert(date,数据更新日期,23)= convert(date,GETDATE(),23)  。输入server_name 数据库 ip：localhost ，想要连接的数据库名：spb，DBA提供的数据库账户和密码 zhongyf,Zyf123456。
Sub 获取最新库存() &amp;#39; Carl SQL Server Connection  &amp;#39;  &amp;#39; FOR THIS CODE TO WORK  &amp;#39; In VBE you need to go Tools References and check Microsoft Active X Data Objects 2.x library  &amp;#39;  Dim Cn As Object Dim Server_Name As String Dim Database_Name As String Dim User_ID As String Dim Password As String Dim SQLStr As String Dim rs As Object Set rs = CreateObject(&amp;#34;ADODB.</description>
    </item>
    
    <item>
      <title>VBA批量调整Excel单元格格式</title>
      <link>/2019/05/15/t/</link>
      <pubDate>Wed, 15 May 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/05/15/t/</guid>
      <description>代码 该宏代码实现某一文件夹内全部Excel文件的单元格格式调整。
Sub 批量修改单元格格式() Dim wb As Excel.Workbook x = ThisWorkbook.Path &amp;amp; &amp;#34;\&amp;#34; f = Dir(x &amp;amp; &amp;#34;&amp;#34; &amp;amp; &amp;#34;*xls&amp;#34;) Do While f &amp;lt;&amp;gt; &amp;#34;&amp;#34; If f &amp;lt;&amp;gt; ThisWorkbook.Name Then Set wb = Workbooks.Open(x &amp;amp; &amp;#34;&amp;#34; &amp;amp; f) For Each Sheet In Sheets Sheet.Columns(&amp;#34;A:AZ&amp;#34;).Font.Name = &amp;#34;微软雅黑&amp;#34; Sheet.Columns(&amp;#34;A:AZ&amp;#34;).Font.Size = &amp;#34;10&amp;#34; Sheet.Range(&amp;#34;A:AZ&amp;#34;).EntireColumn.AutoFit Next Sheet wb.Save wb.Close End If f = Dir Loop End Sub </description>
    </item>
    
    <item>
      <title>利用VBA插入图片</title>
      <link>/2018/08/13/vba/</link>
      <pubDate>Mon, 13 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/08/13/vba/</guid>
      <description>在工作过程中需要向Excel单元格中插入图片,VBA代码记录如下：
&#39; insert photoSub insert_photo()On Error Resume NextDim dress$Set dig = Application.FileDialog(msoFileDialogFolderPicker)With dig.Showdress = .SelectedItems(1) &#39;选择文件夹地址End WithDim MR As RangeFor Each MR In SelectionIf Not IsEmpty(MR) ThenMR.SelectML = MR.LeftMT = MR.TopMW = MR.WidthMH = MR.HeightActiveSheet.Shapes.AddShape(msoShapeRectangle, ML, MT, MW, MH).SelectSelection.ShapeRange.Fill.UserPicture _dress &amp;amp; &amp;quot;\&amp;quot; &amp;amp; MR.Value &amp;amp; &amp;quot;.jpg&amp;quot; &#39;设置地址所在目录下以当前单元内容为名称的.jpg图片End IfNextEnd Sub使用方法：</description>
    </item>
    
    <item>
      <title>利用VBA拆分Excel</title>
      <link>/2018/07/15/vba/</link>
      <pubDate>Sun, 15 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/07/15/vba/</guid>
      <description>在工作过程中需要按照Sheet拆分Excel,VBA代码记录如下：
&#39; split sheetSub SaveAs()On Error Resume NextDim FolderPath As String, FolderName As String, BN As StringDim ReturnValue As IntegerBN = ActiveWorkbook.NameFolderPath = ThisWorkbook.PathFolderName = Mid(BN, 1, InStrRev(BN, &amp;quot;.&amp;quot;, Len(BN)) - 1)Dim MyFile As ObjectSet MyFile = CreateObject(&amp;quot;Scripting.FileSystemObject&amp;quot;)If MyFile.folderexists(FolderPath &amp;amp; &amp;quot;\&amp;quot; &amp;amp; FolderName &amp;amp; &amp;quot;-Saved&amp;quot;) ThenReturnValue = MsgBox(&amp;quot;文件夹已存在，是否更新内容？&amp;quot;, vbOKCancel, &amp;quot;Caution!&amp;quot;)If ReturnValue = 2 Then Exit SubElseMyFile.CreateFolder (FolderPath &amp;amp; &amp;quot;\&amp;quot; &amp;amp; FolderName &amp;amp; &amp;quot;-Saved&amp;quot;)Set MyFile = NothingEnd IfApplication.</description>
    </item>
    
  </channel>
</rss>